/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package graph;
import javax.swing.JOptionPane;
import java.awt.Dimension;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
/**
 *
 * @author lilin
 */
public class addWarehouseWindow extends javax.swing.JFrame {

    public String name;
    private String connectedWarehouse;
    private int distance;
    public static Graph g;
    //quizá necesite poner un public static <nombre de la ventana anterior> prevWindow en todo
    
    
    /** Creates new form addWarehouseWindow */
    public addWarehouseWindow(Graph g) {
        initComponents();
        this.g = g;
        this.setVisible(true);
        nameTxt.setEnabled(true);
        bSubmitName.setEnabled(true);
        connectedWarehouseTxt.setEnabled(false);
        sDistance.setEnabled(false);
        bIn.setEnabled(false);
        bOut.setEnabled(false); 
        bContinue.setVisible(false);
        this.setLocationRelativeTo(null);
        nameTxt.setToolTipText("Tip: para evitar repetir nombres, puedes ver los de los almacenes ya existentes.");
        bExistingWarehouses.setToolTipText("Haz click aquí para ver los nombres de los almacenes ya existentes.");
        bSubmitName.setToolTipText("Haz click aquí para darle al nuevo almacén un nombre definitivo.");
        sDistance.setToolTipText("Debes ingresar el nombre del nuevo almacén para desbloquear estas opciones.");
        bIn.setToolTipText("Debes ingresar el nombre del nuevo almacén para desbloquear estas opciones.");
        bOut.setToolTipText("Debes ingresar el nombre del nuevo almacén para desbloquear estas opciones.");
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        nameTxt = new javax.swing.JTextField();
        bSubmitName = new javax.swing.JButton();
        bExistingWarehouses = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        connectedWarehouseTxt = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        bOut = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        sDistance = new javax.swing.JSpinner();
        bIn = new javax.swing.JButton();
        bContinue = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("AGREGAR UN NUEVO ALMACÉN");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 10, 230, 20));

        jLabel2.setText("El mismo debe ser ÚNICO.");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, -1, -1));

        jLabel3.setText("Primero, ingresa un nombre para el almacén (ejemplo: A, B...).");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, -1, -1));
        jPanel1.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 170, 298, 10));

        nameTxt.setText("Ingresa el nombre aquí");
        nameTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameTxtActionPerformed(evt);
            }
        });
        jPanel1.add(nameTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 130, 154, 23));

        bSubmitName.setText("Asignar nombre");
        bSubmitName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSubmitNameActionPerformed(evt);
            }
        });
        jPanel1.add(bSubmitName, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 130, -1, -1));

        bExistingWarehouses.setText("Ver almacenes preexistentes");
        bExistingWarehouses.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                bExistingWarehousesMouseMoved(evt);
            }
        });
        bExistingWarehouses.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bExistingWarehousesActionPerformed(evt);
            }
        });
        jPanel1.add(bExistingWarehouses, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 40, -1, 30));

        jLabel4.setText(" y algunos almacenes ya existentes. El almacén debe");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 200, -1, -1));

        jLabel5.setText("Luego, ingresa las conexiones entre tu nuevo almacén");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 180, -1, 20));

        jLabel6.setText("tener como mínimo una entrada y una salida para ser válido.");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 220, -1, -1));

        connectedWarehouseTxt.setText("Opción inválida hasta que no se ingrese el nombre");
        connectedWarehouseTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                connectedWarehouseTxtActionPerformed(evt);
            }
        });
        jPanel1.add(connectedWarehouseTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 250, 270, -1));
        jPanel1.add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, 298, 10));

        bOut.setText("AGREGAR SALIDA");
        bOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bOutActionPerformed(evt);
            }
        });
        jPanel1.add(bOut, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 320, 130, -1));

        jLabel8.setText("Distancia:");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 280, -1, 20));

        sDistance.setModel(new javax.swing.SpinnerNumberModel(0, 0, 2147483647, 1));
        sDistance.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                sDistanceKeyTyped(evt);
            }
        });
        jPanel1.add(sDistance, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 280, 80, -1));

        bIn.setText("AGREGAR ENTRADA");
        bIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bInActionPerformed(evt);
            }
        });
        jPanel1.add(bIn, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 320, -1, -1));

        bContinue.setText("Continuar");
        jPanel1.add(bContinue, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 360, -1, -1));
        jPanel1.add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(17, 32, 298, 10));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 360, 400));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bExistingWarehousesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bExistingWarehousesActionPerformed
        JTextArea text = new JTextArea(g.getWarehouseNames());
        text.setLineWrap(true);
        JScrollPane scrollPane = new JScrollPane(text);  
        scrollPane.setPreferredSize(new Dimension(200, 300));
        JOptionPane.showMessageDialog(null, scrollPane, "Almacenes", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_bExistingWarehousesActionPerformed

    private void bExistingWarehousesMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bExistingWarehousesMouseMoved
        
    }//GEN-LAST:event_bExistingWarehousesMouseMoved

    private void nameTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameTxtActionPerformed

    private void bSubmitNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSubmitNameActionPerformed
        if(nameTxt.getText().isBlank() || nameTxt.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Debe ingresar un nombre antes de continuar.");
        }else{
            name = nameTxt.getText();
            if (g.isValidNewWarehouseName(name)){
                Warehouse w = new Warehouse(name);
                nameTxt.setEnabled(false);
                bSubmitName.setEnabled(false);
                bSubmitName.setToolTipText("El nombre del almacén ya fue escogido.");
                nameTxt.setText("El nombre ya fue ingresado.");
                nameTxt.setToolTipText(null);
                connectedWarehouseTxt.setText("Ingresa el nombre del almacén al que se conecta");
                connectedWarehouseTxt.setToolTipText("Tip: para saber a cuáles almacenes se puede conectar, puedes ver los almacenes ya existentes.");
                connectedWarehouseTxt.setEnabled(true);
                sDistance.setEnabled(true);
                bIn.setEnabled(true);
                bIn.setToolTipText("Al presionar este botón, se creará un camino desde el almacén introducido hasta " + name + ".");
                bOut.setEnabled(true);       
                bOut.setToolTipText("Al presionar este botón, se creará un camino desde " + name + " hasta el almacén introducido.");
                sDistance.setToolTipText(null);
                g.addVertex(w);
                JOptionPane.showMessageDialog(null, "Nombre ingresado correctamente.");
            }else{
                JOptionPane.showMessageDialog(null, "El nombre ingresado es inválido. Intente otra vez.");
            }
        }
    }//GEN-LAST:event_bSubmitNameActionPerformed

    private void connectedWarehouseTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_connectedWarehouseTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_connectedWarehouseTxtActionPerformed

    private void bInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bInActionPerformed
        if(connectedWarehouseTxt.getText().isBlank() || connectedWarehouseTxt.getText().isEmpty() || (Integer)sDistance.getValue()==0){
            JOptionPane.showMessageDialog(null, "Valide sus datos. Debe ingresar el nombre de un almacén al que se conecta y la distancia entre ellos (que debe ser mayor que 0).");
        }else{
            connectedWarehouse = connectedWarehouseTxt.getText();
            distance = (Integer)(sDistance.getValue());
            g.addArch(connectedWarehouse, name, distance);
            if (g.areConnected(connectedWarehouse, name)){
                JOptionPane.showMessageDialog(null, "Camino creado correctamente.");
            }
            if (g.noWarehousesIsolated()){
                bContinue.setVisible(true);
            }
        }
    }//GEN-LAST:event_bInActionPerformed

    private void bOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bOutActionPerformed
        if(connectedWarehouseTxt.getText().isBlank() || connectedWarehouseTxt.getText().isEmpty() || (Integer)sDistance.getValue()==0){
            JOptionPane.showMessageDialog(null, "Valide sus datos. Debe ingresar el nombre de un almacén al que se conecta y la distancia entre ellos (que debe ser mayor que 0).");
        }else{
            connectedWarehouse = connectedWarehouseTxt.getText();
            distance = (Integer) sDistance.getValue();
            g.addArch(name, connectedWarehouse, distance);
            if (g.areConnected(name, connectedWarehouse)){
                JOptionPane.showMessageDialog(null, "Camino creado correctamente.");
            }
            if (g.noWarehousesIsolated()){
                bContinue.setVisible(true);
            }
        }
    }//GEN-LAST:event_bOutActionPerformed

    private void sDistanceKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_sDistanceKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_sDistanceKeyTyped


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(addWarehouseWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(addWarehouseWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(addWarehouseWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(addWarehouseWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new addWarehouseWindow(g).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bContinue;
    private javax.swing.JButton bExistingWarehouses;
    private javax.swing.JButton bIn;
    private javax.swing.JButton bOut;
    private javax.swing.JButton bSubmitName;
    private javax.swing.JTextField connectedWarehouseTxt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JTextField nameTxt;
    private javax.swing.JSpinner sDistance;
    // End of variables declaration//GEN-END:variables

}
